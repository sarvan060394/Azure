from flask import Flask, request
import os

app = Flask(__name__)

@app.route('/restart', methods=['GET'])
def restart():
    file_path = '/path/to/sidecar/volume/liveness-probe-file'
    with open(file_path, 'w') as f:
        f.write('restart')
    return "File created to trigger restart", 200

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=8080)
--------------------------


apiVersion: apps/v1
kind: Deployment
metadata:
  name: sidecar
spec:
  replicas: 5
  selector:
    matchLabels:
      app: sidecar
  template:
    metadata:
      labels:
        app: sidecar
    spec:
      containers:
      - name: sidecar-container
        image: your-sidecar-image
        volumeMounts:
        - mountPath: /path/to/sidecar/volume
          name: sidecar-volume
        livenessProbe:
          exec:
            command:
            - cat
            - /path/to/sidecar/volume/liveness-probe-file
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: sidecar-volume
        emptyDir: {}

----------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sidecar
spec:
  replicas: 5
  selector:
    matchLabels:
      app: sidecar
  template:
    metadata:
      labels:
        app: sidecar
    spec:
      containers:
      - name: sidecar-container
        image: your-sidecar-image
        volumeMounts:
        - mountPath: /path/to/sidecar/volume
          name: sidecar-volume
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - >
              if [ -f /path/to/sidecar/volume/liveness-probe-file ]; then
                exit 1;
              else
                exit 0;
              fi
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: sidecar-volume
        emptyDir: {}

---------------------------------

from flask import Flask, request
import os

app = Flask(__name__)

@app.route('/restart', methods=['GET'])
def restart():
    file_path = '/path/to/sidecar/volume/liveness-probe-file'
    try:
        # Create the directory if it does not exist
        os.makedirs(os.path.dirname(file_path), exist_ok=True)
        
        # Create the file
        with open(file_path, 'w') as f:
            f.write('restart')
        return "File created to trigger restart", 200
    except Exception as e:
        return f"Failed to create file: {e}", 500

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=8080)

--------------------

from flask import Flask, request
import os
import logging

# Configure logging
logging.basicConfig(level=logging.DEBUG)

app = Flask(__name__)

@app.route('/restart', methods=['GET'])
def restart():
    file_path = '/path/to/sidecar/volume/liveness-probe-file'
    try:
        # Log the file path
        app.logger.debug(f"Attempting to create directory and file at: {file_path}")
        
        # Create the directory if it does not exist
        os.makedirs(os.path.dirname(file_path), exist_ok=True)
        
        # Create the file
        with open(file_path, 'w') as f:
            f.write('restart')
        
        # Log success
        app.logger.debug(f"File created at: {file_path}")
        return "File created to trigger restart", 200
    except Exception as e:
        # Log the exception
        app.logger.error(f"Failed to create file: {e}")
        return f"Failed to create file: {e}", 500

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=8080)

###############
from flask import Flask, request
import os
import logging

# Configure logging
logging.basicConfig(level=logging.DEBUG)

app = Flask(__name__)

@app.route('/restart', methods=['GET'])
def restart():
    file_path = '/path/to/sidecar/volume/liveness-probe-file'
    try:
        # Log the file path
        app.logger.debug(f"Attempting to write to file at: {file_path}")
        
        # Create the directory if it does not exist
        os.makedirs(os.path.dirname(file_path), exist_ok=True)
        
        # Write 'restart' to the file
        with open(file_path, 'w') as f:
            f.write('restart')
        
        # Log success
        app.logger.debug(f"Written 'restart' to file at: {file_path}")
        return "File updated to trigger restart", 200
    except Exception as e:
        # Log the exception
        app.logger.error(f"Failed to update file: {e}")
        return f"Failed to update file: {e}", 500

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=8080)

#######################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sidecar
spec:
  replicas: 5
  selector:
    matchLabels:
      app: sidecar
  template:
    metadata:
      labels:
        app: sidecar
    spec:
      containers:
      - name: sidecar-container
        image: your-sidecar-image
        volumeMounts:
        - mountPath: /path/to/sidecar/volume
          name: sidecar-volume
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - >
              if grep -q "restart" /path/to/sidecar/volume/liveness-probe-file; then
                exit 1;
              else
                exit 0;
              fi
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: sidecar-volume
        emptyDir: {}



